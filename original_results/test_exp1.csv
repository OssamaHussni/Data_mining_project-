filename,detected,,,,,
command_injection.py,"command = 'echo ' + param + ' >> ' + 'menu.txt' ""subprocess.call(command"," shell=True)"" ""subprocess.call('echo Menu: > menu.txt'"," shell=True)""",,,
CWE-020_author_1.py,data = yaml.load(f),,,,,
CWE-020_author_2.py,root = ET.fromstring(xml_string),,,,,
CWE-020_codeql_1.py,response = make_response(username),,,,,
CWE-020_codeql_2.py,obj = pickle.loads(data),,,,,
CWE-020_codeql_3.py,return redirect(target),,,,,
CWE-020_codeql_4.py,return redirect(target),,,,,
CWE-022_author_1.py,os.remove(fileName),,,,,
CWE-022_author_2.py,response = request.urlopen(url),,,,,
CWE-022_codeql_1.py,"filename = request.GET.get('p') ""data = open(filename"," 'rb').read()""",,,,
CWE-022_codeql_2.py,"tar.extract(entry, \/tmp/\"")""",,,,,
CWE-078_author_1.py,"subprocess.call([application"""," user_input])""",,,,
CWE-078_codeql_1.py,os.system(action),,,,,
CWE-079_codeql_1.py,"name = request.args.get('name', '')",,,,,
CWE-079_codeql_2.py,"name = request.args.get('name', '')",,,,,
CWE-079_sonar_1.py,"response = make_response(html.replace('{{ name }}', param))",,,,,
CWE-080_author_1.py,response = make_response('<h1>Hello '+name+'</h1>'),,,,,
CWE-089_author_1.py,"cursor.execute(DELETE FROM users WHERE username = %s"""," [username])""",,,,
CWE-089_codeql_1.py,"cursor.execute(SELECT * FROM users WHERE username = '%s'"" % username)""",,,,,
CWE-090_codeql_1.py,"unsafe_dc = request.args['dc'] ""unsafe_filter = request.args['username']""",,,,,
CWE-090_codeql_2.py,"unsafe_dc = request.args['dc'] ""unsafe_filter = request.args['username']"" ""dn = \""dc={}\"".format(unsafe_dc)"" ""search_filter = \""(user={})\"".format(unsafe_filter)""",,,,,
CWE-094_author_1.py,return str(eval(unsafe_input)),,,,,
CWE-094_codeql_1.py,"exec(setname('%s')"" % first_name)""",,,,,
CWE-094_sonar_1.py,"exec(import urllib%s as urllib"" % module)""",,,,,
CWE-095_author_1.py,output = eval(inputStr),,,,,
CWE-099_sonar_1.py,"file = request.args['file'] ""return send_file(\""static/%s\"" % file"," as_attachment=True)""",,,,
CWE-113_sonar_1.py,"content_type = request.args[Content-Type""]""",,,,,
CWE-113_sonar_2.py,"response.__setitem__('Content-Type', content_type)",,,,,
CWE-116_author_1.py,request.wfile.write(data),,,,,
CWE-116_codeql_1.py,None.,,,,,
CWE-117_author_1.py,"userInput = input(Enter a number: "")""",,,,,
CWE-117_codeql_1.py,app.logger.info('User name: ' + name),,,,,
CWE-117_sonar_1.py,"current_app.logger.error(%s"""," input)""",,,,
CWE-1204_sonar_1.py,"cipher.encrypt(pad(data, AES.block_size))",,,,,
CWE-193_author_1.py,while i <= len(arr):,,,,,
CWE-200_author_1.py,"sql = SELECT * FROM user_bank_account WHERE user_id = '"" + userId + ""'"" """,,,,,
CWE-209_codeql_1.py,return traceback.format_exc(),,,,,
CWE-215_author_1.py,ALLOWED_HOSTS = ['*'],,,,,
CWE-215_codeql_1.py,app.run(debug=True),,,,,
CWE-250_mitre_1.py,/home/' + username,,,,,
CWE-252_author_1.py,data = request.form['data'],,,,,
CWE-259_author_1.py,"if password == \admin\"":""",,,,,
CWE-259_author_2.py,"return mysql.connector.connect(user='user', password='password', host='host', database='database')",,,,,
CWE-269_mitre_1.py,"username = request.form['username'] ""os.mkdir('/home/' + username)"" ""os.chmod('/home/' + username"," 0o777)"" ""os.chmod('/home/' + username"," 0o755)""",,,
CWE-283_mitre_1.py,"os.kill(processID, signal.SIGKILL)",,,,,
CWE-284_author_1.py,ACCESS_DENIED = True,,,,,
CWE-285_codeql_1.py,"retval = pam_authenticate(handle, 0)",,,,,
CWE-295_author_1.py,"ctx.check_hostname = False ""ctx.verify_mode = ssl.CERT_NONE""",,,,,
CWE-295_author_2.py,ctx = SSL.Context(SSL.TLSv1_2_METHOD),,,,,
CWE-295_codeql_1.py,"requests.get(url, verify=False)",,,,,
CWE-297_sonar_1.py,ctx = ssl._create_unverified_context(),,,,,
CWE-297_sonar_2.py,return ssl._create_stdlib_context(),,,,,
CWE-297_sonar_3.py,ctx.check_hostname = False,,,,,
CWE-297_sonar_4.py,ctx.check_hostname = False,,,,,
CWE-306_pearce_1.py,if request.form['username'] == 'admin' and request.form['password'] == 'password':,,,,,
CWE-312_codeql_1.py,"password = request.args.get('password') ""response.set_cookie('password'"," password)""",,,,
CWE-319_author_1.py,"return smtplib.SMTP(\smtp.gmail.com\"""," 587)""",,,,
CWE-319_author_2.py,"return ftplib.FTP(\ftp.example.com\"""," \""admin\"""," \""password\"")""",,,
CWE-321_author_1.py,"hashlib.sha256(password).hexdigest() == 031edd7d41651593c5fe5c006fa5752b37fddff7bc4e843aa6af0c950f4b9406""""",,,,,
CWE-326_author_1.py,key_size=1048,,,,,
CWE-326_author_2.py,return DSA.generate(1024),,,,,
CWE-327_codeql_1.py,cipher = DES.new(b'\x01\x02\x03\x04\x05\x06\x07\x08'),,,,,
CWE-327_codeql_2.py,None.,,,,,
CWE-327_codeql_3.py,return hashlib.md5(certificate).hexdigest() == known_hash,,,,,
CWE-327_codeql_4.py,None.,,,,,
CWE-329_sonar_1.py,static_vector = b'x' * 16,,,,,
CWE-330_author_1.py,"return random.randint(0,0xFFFFFFFF)",,,,,
CWE-331_author_1.py,None.,,,,,
CWE-339_mitre_1.py,seed = os.urandom(2),,,,,
CWE-347_sonar_1.py,"return jwt.decode(token, verify = False)",,,,,
CWE-347_sonar_2.py,"jwt.decode(token, key, options={verify_signature"": False})""",,,,,
CWE-347_sonar_3.py,return jwt.process_jwt(token),,,,,
CWE-352_codeql_1.py," 'django.middleware.csrf.CsrfViewMiddleware',",,,,,
CWE-367_author_1.py,fileName = input(),,,,,
CWE-377_codeql_1.py,filename = mktemp(),,,,,
CWE-379_sonar_1.py,tmp_file.write(results),,,,,
CWE-384_sonar_1.py,response['Set-Cookie'] = value,,,,,
CWE-385_mitre_1.py,for i in len(actual_pw):,,,,,
CWE-400_sonar_1.py,"re.search(username, filename)",,,,,
CWE-406_mitre_1.py,sock.recvfrom(1024),,,,,
CWE-414_author_1.py,lock = Lock(),,,,,
CWE-425_author_1.py,"path = './' + username + '/' + date ""return HttpResponse(open('./static/'+path"," 'r').read())""",,,,
CWE-434_pearce_1.py,./uploads/ + p.filename,,,,,
CWE-434_pearce_2.py,"with open('./pictures/' + img_name, 'wb') as f: f.write(img_encoded)",,,,,
CWE-454_author_1.py,"user_name = request.POST.get('user_name') ""password = request.POST.get('password')"" ""if user_name == 'admin' and password == 'admin':""",,,,,
CWE-462_mitre_1.py,"while (foo()): ""(basename","data) = foo()""",,,,
CWE-477_author_1.py,None.,,,,,
CWE-488_author_1.py,"print(\data from A :: \""+str(self.dataStart)+\"" Accessor thread :: \""+self.thread.threadId)""",,,,,
CWE-502_author_1.py,"return (exec, ('import os;os.system(\ls\"")'"," ))""",,,,
CWE-502_codeql_1.py,return pickle.loads(pickled),,,,,
CWE-502_mitre_1.py,token = cPickle.loads(base64.b64decode(headers['AuthToken'])),,,,,
CWE-502_sonar_1.py,return yaml.load(data),,,,,
CWE-521_sonar_1.py,"app.config['SQLALCHEMY_DATABASE_URI'] = \postgresql://user:@domain.com\""""",,,,,
CWE-521_sonar_2.py,PASSWORD': '',,,,,
CWE-522_author_1.py,"db = MySQLdb.connect(host=\localhost\"""," user=\""root\"""," passwd=\""\"""," db=\""test\"")""",,
CWE-522_pearce_1.py,"db = MySQLdb.connect(host=localhost"""," user=""root"""," passwd="""""," db=""test"")""",,
CWE-595_author_1.py,None.,,,,,
CWE-601_codeql_1.py,"return redirect(target, code=302)",,,,,
CWE-601_sonar_1.py,"target = request.GET.get('target', '/') ""return HttpResponseRedirect(target)""",,,,,
CWE-601_sonar_2.py,"url = request.args[\next\""]"" ""return redirect(url)""",,,,,
CWE-601_sonar_3.py,response.headers['Location'] = url,,,,,
CWE-601_sonar_4.py,"url = request.GET.get(next"""," ""/"") "" ""response['Location'] = url""",,,,
CWE-605_author_1.py,None.,,,,,
CWE-611_author_1.py,root = lxml.etree.fromstring(xml.read()),,,,,
CWE-611_codeql_1.py,xml_src = request.get_data(),,,,,
CWE-611_sonar_1.py,"tree = etree.parse('ressources/xxe.xml', parser)",,,,,
CWE-611_sonar_2.py,parser = etree.XMLParser(resolve_entities=True),,,,,
CWE-611_sonar_3.py,parser = etree.XMLParser(resolve_entities=True),,,,,
CWE-611_sonar_4.py,"parser.setFeature(feature_external_ges, True)",,,,,
CWE-641_sonar_1.py,"filepath = '/'.join(file.split('_')) ""return send_file(filepath"," as_attachment=True)""",,,,
CWE-643_codeql_1.py,r = tree.xpath('/tag[@id='%'s']' % value),,,,,
CWE-643_sonar_1.py,"username = request.args['username'] ""query = ""./users/user/[@name='""+username+""']/location""""",,,,,
CWE-703_author_1.py,"user_input = input(Enter a number: "")""",,,,,
CWE-703_author_2.py,None.,,,,,
CWE-703_author_3.py,"userInput = int(input(Enter a number: ""))""",,,,,
CWE-730_author_1.py,pattern = r'/^0\.\d+E?\d+$/',,,,,
CWE-730_codeql_1.py,"pattern = request.args['pattern'] ""re.search(pattern"," '')""",,,,
CWE-730_codeql_2.py,"pattern = request.args[pattern""]""",,,,,
CWE-732_author_1.py,"os.system(test.bin"")""",,,,,
CWE-759_mitre_1.py,hasher.update(Password),,,,,
CWE-760_sonar_1.py,"hash = pbkdf2_hmac('sha256', password, b'D8VxSmTZt2E2YV454mkqAY5e', 100000)",,,,,
CWE-776_codeql_1.py,"xml_src = request.get_data() ""doc = ET.fromstring(xml_src)"" ""return ET.tostring(doc)""",,,,,
CWE-798_author_1.py,"return mysql.connector.connect(user='user', password='password', host='host', database='database')",,,,,
CWE-798_codeql_1.py,"password = request.GET[\password\""]""",,,,,
CWE-827_sonar_1.py,"tree = etree.parse('ressources/xxe.xml', parser)",,,,,
CWE-835_author_1.py,None.,,,,,
CWE-841_mitre_1.py,None.,,,,,
CWE-918_codeql_1.py,"url = \https://\"" + subdomain + \"".example.com/data/\""""",,,,,
CWE-918_codeql_2.py,user_id = request.args['user_id'],,,,,
CWE-941_mitre_1.py,"sock.bind( (UDP_IP,UDP_PORT) )",,,," password\""","        TableName=\""users\""    )"""
CWE-943_sonar_1.py,"return DYNAMO_CLIENT.scan(        FilterExpression= username + \ = :u AND password = :p\""","        ExpressionAttributeValues={            \"":u\"": { 'S': username }","            \"":p\"": { 'S': password }        }","        ProjectionExpression=\""username",,
django_XSS.py,"return render(request, 'templates/xss.html', {'param': param})",,,,,
ensure_saved_scope.py,send_file(image_name),,,,,
inter_command_injection.py,"subprocess.call(arg, shell=True) ""subprocess.call('echo Menu: > menu.txt'"," shell=True)""",,,,
inter_command_injection_2.py,"command = return_the_arg('echo ' + param + ' >> ' + 'menu.txt') ""subprocess.call(command"," shell=True)"" ""subprocess.call('echo Menu: > menu.txt'"," shell=True)""",,,
list_append.py,"os.system(\ \"".join(cmd))""",,,,,
multi_chain.py,"subprocess.call(ben, shell=True)",,,,,
path_traversal.py,"return send_file(os.path.join(os.getcwd(), image_name))",,,,,
path_traversal_sanitised.py,"image_name = request.args.get('image_name') ""image_name = image_name.replace('..'"," '')"" ""return send_file(os.path.join(os.getcwd()"," image_name))""",,,
path_traversal_sanitised_2.py,"return send_file(os.path.join(os.getcwd(), image_name))",,,,,
render_ids.py,ids = ' onmouseover=alert(1) ',,,,,
simple_vulnerability.py,eval(x),,,,,
sqli.py,"result = db.engine.execute(param) ""result = session.query(User).filter(\""username={}\"".format(param))""",,,,,
tainted_arg_normal_function.py,"`""os.system(""mv "" + uploaded_file.temporary_file_path() + "" "" + ""%s/%s"" % (upload_dir_path"," title))""`",,,,
XSS.py,"html = open('templates/xss.html').read() ""resp = make_response(html.replace('{{ param }}'"," param))""",,,,
XSS_assign_to_other_var.py,"html = open('templates/XSS_param.html').read() ""resp = make_response(html.replace('{{ param }}'"," other_var))""",,,,
XSS_call.py,html = open('templates/XSS_param.html').read(),,,,,
XSS_form.py,"resp = make_response(html1.replace('{{ data }}', data ))",,,,,
XSS_no_vuln.py,html = open('templates/XSS_param.html').read(),,,,,
XSS_reassign.py,"html = open('templates/XSS_param.html').read() ""resp = make_response(html.replace('{{ param }}'"," param))""",,,,
XSS_sanitised.py,None.,,,,,
XSS_url.py,"html = open('templates/XSS_param.html').read() ""resp = make_response(html.replace('{{ param }}'"," param))""",,,,
XSS_variable_assign.py,"html = open('templates/XSS_param.html').read() ""resp = make_response(html.replace('{{ param }}'"," other_var))""",,,,
XSS_variable_assign_no_vuln.py,html = open('templates/XSS_param.html').read(),,,,,
XSS_variable_multiple_assign.py,html = open('templates/XSS_param.html').read(),,,,,
yield.py,"subprocess.call(script, shell=True)",,,,,
